@model ScampusCloud.Models.VisitorSelfRegistrationModel
@{
    Layout = null;
    ViewData["Title"] = "Add Visitor Self Registration";
}
@Html.Partial("_LayoutHeadScriptsPartial")
<style>
    #cameraContainer {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-top: 20px;
    }

    #videoElement {
        width: 100%;
        max-width: 400px;
        margin-bottom: 10px;
        border: 2px solid #333;
        border-radius: 8px;
    }

    #captureButton {
        padding: 10px 20px;
        font-size: 16px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    #capturedImage {
        width: 100%;
        max-width: 400px;
        margin-top: 10px;
        border: 2px solid #333;
        border-radius: 8px;
    }

    #capturedCameraContainer img{
        width : 30% !important;
    }
    .icon-container i {
        margin-right: 10px;
        font-size: 24px;
    }
</style>
<form id="frmManageReader" asp-action="AddEditVisitorSelfRegistration" asp-controller="VisitorSelfRegistration" method="post" enctype="multipart/form-data">
    <div class="subheader py-2 py-lg-4 subheader-solid" id="kt_subheader">
        <div class="container-fluid d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
            <!--begin::Info-->
            <div class="d-flex align-items-center flex-wrap mr-1">
                <!--begin::Page Heading-->
                <div class="d-flex align-items-baseline mr-5">
                    <!--begin::Page Title-->
                    <h5 class="text-dark font-weight-bold my-2 mr-5">@ViewData["Title"]</h5>
                    <!--end::Page Title-->
                </div>
                <!--end::Page Heading-->
            </div>
            <!--end::Info-->

        </div>
    </div>
    <div class="d-flex flex-column-fluid flex-center">
        <div class="container">
            <div class="card card-custom">
                <div class="card-body p-0">
                    <!--begin::Wizard Body-->
                    <div class="row justify-content-center my-10 px-8 my-lg-15 px-lg-10">
                        @Html.HiddenFor(x => x.IsEdit)
                        @Html.HiddenFor(x => x.Id)
                        @Html.HiddenFor(x => x.CompanyId)
                        @Html.HiddenFor(x => x.CreatedBy)
                        @Html.HiddenFor(x => x.ModifiedBy)
                        @Html.HiddenFor(x => x.IsActive, new { id = "hdnIsActive" })
                        @Html.HiddenFor(x => x.ServiceIds)
                        @Html.HiddenFor(x => x.ImageBase64)
                        <div class="col-xl-12 col-xxl-7">
                            <!--begin::Wizard Form-->
                            <!--begin::Wizard Step 1-->
                            <div class="pb-5" data-wizard-type="step-content" data-wizard-state="current">
                                <!--begin::Input-->
                                <div class="form-group">
                                    <label>FirstName</label>
                                    @Html.TextBoxFor(m => m.FirstName, new { placeholder= "Please enter your First Name", @class = "form-control form-control-solid form-control-lg", @required = "required" })
                                </div>
                                <!--end::Input-->
                                <!--begin::Input-->
                                <div class="form-group">
                                    <label>LastName</label>
                                    @Html.TextBoxFor(m => m.LastName, new { placeholder = "Please enter your LastName", @class = "form-control form-control-solid form-control-lg", @required = "required" })
                                </div>

                                <div class="form-group">
                                    <label>Code</label>
                                    @Html.TextBoxFor(m => m.Code, new { placeholder = "Please enter Code",@class = "form-control form-control-solid form-control-lg", @required = "required" })
                                    @Html.ValidationMessageFor(m => m.Code, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label>Company Name</label>
                                    @Html.TextBoxFor(m => m.CompanyName, new { placeholder = "Please enter your Company Name", @class = "form-control form-control-solid form-control-lg", @required = "required" })
                                </div>
                                <div class="form-group">
                                    <label>Visitor Type</label>
                                    @Html.DropDownListFor(model => model.VisitorTypeIds, new SelectList(Model.lstVisitorTypeDropdown, "Value", "Text"), "Select Visitor Type"
, new { @class = "form-control form-control-solid form-control-lg", @id = "ddlVisitorType" })
                                </div>
                                <div class="form-group">
                                    <label>Visitor Reason</label>
                                    @Html.DropDownListFor(model => model.VisitorreasonIds, new SelectList(Model.lstVisitorReasonDropdown, "Value", "Text"), "Select Visitor Reason"
, new { @class = "form-control form-control-solid form-control-lg", @id = "ddlVisitorReason" })
                                </div>
                                <div class="form-group">
                                    <label>Phone Number</label>
                                    @Html.TextBoxFor(m => m.PhoneNumber, new { placeholder = "Please enter your Phone Number", @class = "form-control form-control-solid form-control-lg", @required = "required" })
                                </div>
                                <div class="form-group">
                                    <label>Email</label>
                                    @Html.TextBoxFor(m => m.EmailId, new { placeholder = "Please enter your Email", @class = "form-control form-control-solid form-control-lg", @required = "required" })
                                    @Html.ValidationMessageFor(m => m.EmailId, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label>NationalId</label>
                                    @Html.TextBoxFor(m => m.NationalId, new { placeholder = "Please enter your NationalId", @class = "form-control form-control-solid form-control-lg", @required = "required" })
                                </div>

                                <div class="form-group row">
                                    <div class="col-4 text-left">
                                        <div class="dual-list-groupa">
                                            <label>Available Services</label>
                                            <input id="listbox1">
                                        </div>
                                    </div>
                                    <div class="col-4 text-left">
                                        <div class="dual-list-groupb">
                                            <label>Assigned Services</label>
                                            <input id="listbox2">
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label> Visitor Photo</label>
                                    <div id="capturedCameraContainer"> </div>
                                    <canvas id="canvas" style="display:none;"></canvas>
                                </div>

                                <div class="icon-container">
                                    <i class="fas fa-camera" onclick="openModel()" data-toggle="modal" data-target="#CameraModal"></i> <!-- Camera icon -->
                                </div>

                                <div class="form-group">
                                    <label>Is Active:</label>
                                    <span class='switch switch-icon'>
                                        <label>
                                            @if (Model.IsActive)
                                            {
                                                <input type='checkbox' id="chkIsActive" checked="checked">
                                            }
                                            else
                                            {
                                                <input type='checkbox' id="chkIsActive">
                                            }
                                            <span></span>
                                        </label>
                                    </span>
                                </div>
                                <div class="modal fade" id="CameraModal" tabindex="-1" role="dialog" aria-labelledby="CameraModal" aria-hidden="true">
                                    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="exampleModalLabel">Capture Image</h5>
                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                    <i aria-hidden="true" class="ki ki-close"></i>
                                                </button>
                                            </div>
                                            <div class="modal-body">
                                                <div id="cameraContainer">
                                                    <video id="videoElement" autoplay></video>
                                                </div>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-primary font-weight-bold" onclick="capturePhoto()" data-dismiss="modal">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-camera" viewBox="0 0 16 16">
                                                        <path d="M15 12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h1.172a3 3 0 0 0 2.12-.879l.83-.828A1 1 0 0 1 6.827 3h2.344a1 1 0 0 1 .707.293l.828.828A3 3 0 0 0 12.828 5H14a1 1 0 0 1 1 1zM2 4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-1.172a2 2 0 0 1-1.414-.586l-.828-.828A2 2 0 0 0 9.172 2H6.828a2 2 0 0 0-1.414.586l-.828.828A2 2 0 0 1 3.172 4z" />
                                                        <path d="M8 11a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5m0 1a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7M3 6.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0" />
                                                    </svg>

                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <!--end::Wizard Step 1-->
                            <!--begin::Wizard Actions-->
                            <div class="d-flex justify-content-between border-top mt-5 pt-10">
                                <div>
                                    <a href="/Dashboad/Dashboad" class="btn btn-success font-weight-bold text-uppercase px-9 py-4">
                                        <i class="flaticon2-left-arrow-1 icon-sm-nm"></i>Back
                                    </a>
                                    <button class="btn btn-success font-weight-bold text-uppercase px-9 py-4" asp-action="AddEditServices" data-wizard-type="action-submit">Save & Add New</button>
                                </div>
                            </div>
                            <!--end::Wizard Actions-->
                            <!--end::Wizard Form-->
                        </div>
                    </div>
                    <!--end::Wizard Body-->
                </div>
            </div>
</form>

<link href="~/Content/ej2/customized/material.css" rel="stylesheet" />
<link href="~/Content/ej2/material.css" rel="stylesheet" />
<link href="~/Content/ej2/compatibility/material.css" rel="stylesheet" />
@Html.Partial("_LayoutHeadScriptsPartial")
<script src="~/lib/jquery/dist/jquery.js"></script>
@Html.Partial("_LayoutFooterScriptsPartial")
@Html.Partial("_ValidationScriptsPartial")
<script src="~/assets/js/pages/widgets.js" asp-append-version="true"></script>
<script src="~/assets/js/pages/crud/ktdatatable/base/html-table.js"></script>
<script src="~/assets/js/pages/features/miscellaneous/sweetalert2.js"></script>
<script src="~/assets/js/pages/crud/forms/widgets/bootstrap-select.js"></script>
<script src="~/assets/js/pages/crud/forms/widgets/select2.js"></script>
<script src="~/assets/js/popper.min.js"></script>
<script src="~/assets/js/pages/features/miscellaneous/sweetalert2.js"></script>
<script src="~/Scripts/ej2/ej2.min.js"></script>
<script>
    const videoElement = document.getElementById('videoElement');
    const canvas = document.getElementById('canvas');
    const cameraContainer = document.getElementById('cameraContainer');
    const capturedCameraContainer = document.getElementById('capturedCameraContainer');
    const constraints = {
        video: true
    };
    let stream;
    function openModel() {
        navigator.mediaDevices.getUserMedia(constraints)
            .then(function (cameraStream) {
                stream = cameraStream;
                videoElement.srcObject = stream;
            })
            .catch(function (err) {
                console.error('Error accessing user media:', err);
            });
    }
    function capturePhoto() {
        canvas.width = videoElement.videoWidth;
        canvas.height = videoElement.videoHeight;
        canvas.getContext('2d').drawImage(videoElement, 0, 0, canvas.width, canvas.height);
        const dataURL = canvas.toDataURL('image/png');
        displayCapturedImage(dataURL);
        stopCamera();
    }
    function displayCapturedImage(dataURL) {
        const imgElement = document.createElement('img');
        debugger;
        imgElement.src = dataURL;
        $("#ImageBase64").val(dataURL.split(';')[1].split(',')[1]);
        capturedCameraContainer.innerHTML = '';
        capturedCameraContainer.appendChild(imgElement);
    }
    function stopCamera() {
        if (stream) {
            const tracks = stream.getTracks();
            tracks.forEach(track => track.stop());
        }
    }
</script>
<script>
    $(function () {
        LoadAccessGroup();
    })
</script>
<script>
     function LoadAccessGroup() {
          var listObj = new ej.dropdowns.ListBox({
          dataSource: @Html.Raw(Json.Encode(ViewBag.GroupA)),
          fields: { text: 'Text' },
          scope: '#listbox2',
          toolbarSettings: { items: ['moveTo','moveAllTo','moveFrom','moveAllFrom'] },
          height: '200px'
         });
         listObj.appendTo('#listbox1');
         listObj = new ej.dropdowns.ListBox({
        dataSource: @Html.Raw(Json.Encode(ViewBag.GroupB)),
        fields: { text: 'Text' },
        scope: '#listbox1',
        height: '200px'
    });
        listObj.appendTo('#listbox2');
    }
    document.getElementById('frmManageReader').addEventListener('submit', function (e) {
        var listBoxA = document.getElementById('listbox1').ej2_instances[0];
        var listBoxB = document.getElementById('listbox2').ej2_instances[0];
        var selectedItems = listBoxB.jsonData;
        const ids = selectedItems.map(obj => obj.Value);
        $("#ServiceIds").val(ids.join(","));
    });
</script>


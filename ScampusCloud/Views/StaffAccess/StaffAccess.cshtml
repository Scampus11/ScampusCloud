@model ScampusCloud.Models.StaffAccessGroupModel
@{
    ViewData["Title"] = "Manage Staff Access";
}
<style>
    /*.container nav {
        background: rgb(54, 153, 255);
        border-radius: 7px;
    }*/

    #accordionBtn {
        /*background-color: unset !important;
        border-color: unset !important;*/
    }

    .navbar-top-head {
        width: 100%;
    }

    .department_lable {
        white-space: nowrap;
    }

    #accordionExample div {
        border-radius: 10px !important;
    }
</style>
<div class="subheader py-2 py-lg-4 subheader-solid" id="kt_subheader">
    <div class="container-fluid d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
        <!--begin::Info-->
        <div class="d-flex align-items-center flex-wrap mr-1">
            <!--begin::Page Heading-->
            <div class="d-flex align-items-baseline mr-5">
                <!--begin::Page Title-->
                <h5 class="text-dark font-weight-bold my-2 mr-5">
                    <span class="svg-icon menu-icon">
                        <span class="fab fa-font-awesome-flag text-primary"></span>
                    </span> @ViewData["Title"]
                </h5>
            </div>
        </div>
    </div>
</div>
<div class="container">
    <div class="card card-custom">
        <div class="card-header flex-wrap border-0 pt-6 pb-0 row">
            <div class="col-md-12">
                <div class="row align-items-center">
                    <div class="col-lg-9 col-xl-8">
                        @Html.Partial("_searchBarForDatatablePartial")
                    </div>
                    <div class="card-toolbar col-lg-3 col-xl-4 justify-content-end">
                        <!--begin::Button-->
                        <button type="button" class="btn btn-primary mr-2" id="btnBulkAg" data-toggle="modal" data-target="#BulkAgModal">Bulk AG</button>
                        <button type="button" class="btn btn-primary mr-2" data-toggle="modal" data-target="#FilterModal">Filter</button>
                        <!--end::Button-->
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body pt-0">
            <div class="mb-7">
            </div>
            <div id="StaffAccessGroupList" class="custom-paging">
                @Html.Partial("_CustomPaging")
            </div>
            <div class="datatable datatable-default datatable-primary datatable-loaded">
                <div id="pagingFooter" class="datatable-pager">
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xl-6">
        <!--begin::Card-->
        <!--begin::Modal-->
        <div class="modal fade" id="BulkAgModal" tabindex="-1" role="dialog" aria-labelledby="BulkAgModal" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        @*<h5 class="modal-title" id="exampleModalLabel">Modal Title</h5>*@
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <i aria-hidden="true" class="ki ki-close"></i>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group row">
                            <div class="col-6">
                                <div class="dual-list-groupa">
                                    <h5>Available Access Group</h5>
                                    <input id="listbox1">
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="dual-list-groupb">
                                    <h5>Assigned Access Group</h5>
                                    <input id="listbox2">
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-light-primary font-weight-bold" onclick="AssignAccessGroup()" data-dismiss="modal">Assign</button>
                        <button type="button" class="btn btn-primary font-weight-bold" onclick="RemoveAllAG()">RemoveAllAG</button>
                    </div>
                </div>
            </div>
        </div>
        <!--end::Modal-->
        <!--end::Card-->
    </div>

</div>
<div class="row">
    <div class="col-xl-6">
        <!--begin::Card-->
        <!--begin::Modal-->
        <div class="modal fade" id="FilterModal" tabindex="-1" role="dialog" aria-labelledby="FilterModal" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        @*<h5 class="modal-title" id="exampleModalLabel">Modal Title</h5>*@
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <i aria-hidden="true" class="ki ki-close"></i>
                        </button>
                    </div>
                    <div class="modal-body">
                        <!--begin::Group-->
                        <div class="form-group row">
                            <label class="col-form-label col-1 text-left department_lable">Department</label>
                            <div class="col-3">
                                @Html.DropDownListFor(model => model.DepartmentId, new SelectList(Model.lstDepartment, "Value", "Text"), "Select Department", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group row">
                        </div>
                        <hr class="mt-2 mb-3" />
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-light-primary font-weight-bold" onclick="SearchStaff()" data-dismiss="modal">Go Filter</button>
                        <button type="button" class="btn btn-primary font-weight-bold" onclick="ClearFilter()" data-dismiss="modal">Clear Filter</button>
                    </div>
                </div>
            </div>
        </div>
        <!--end::Modal-->
        <!--end::Card-->
    </div>
</div>


<input type="hidden" id="pagesize" />
<input type="hidden" id="totalrecords" />
<input type="hidden" id="pagenumber" value="1" />
<input type="hidden" id="noofpages" />
<input type="hidden" id="hdnShowing1st" value="1" />
<input type="hidden" id="hdnShowingLast" value="5" />
<input type="hidden" id="hdnPageClick" />
<input type="hidden" id="hdnSelectedPage" value="1" />


@Html.Partial("_DeleteConfirmationPartial")
<link href="~/Content/ej2/customized/material.css" rel="stylesheet" />
<link href="~/Content/ej2/material.css" rel="stylesheet" />
<link href="~/Content/ej2/compatibility/material.css" rel="stylesheet" />
<script src="~/Scripts/ej2/ej2.min.js"></script>
<script src="https://cdn.syncfusion.com/ej2/syncfusion-helper.js" type="text/javascript"></script>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script>
    let combinationArray = [];
    let checkedIds = [];
    $(document).ready(function () {
        $("#btnBulkAg").attr("disabled", true);
        $('#accordionBtn').click(function () {
            $('#accordionExample').slideToggle();
        });
        LoadGridData();
        LoadAccessGroup();
    });

    function LoadAccessGroup() {
         var listObj = new ej.dropdowns.ListBox({
         dataSource: @Html.Raw(Json.Encode(ViewBag.GroupA)),
         fields: { text: 'Text' },
         scope: '#listbox2',
         toolbarSettings: { items: ['moveTo','moveAllTo','moveFrom','moveAllFrom'] },
         height: '200px'
        });
        listObj.appendTo('#listbox1');
        listObj = new ej.dropdowns.ListBox({
                  dataSource: @Html.Raw(Json.Encode(ViewBag.GroupB)),
                 fields: { text: 'Text' },
                 scope: '#listbox1',
                 height: '200px'
        });
        listObj.appendTo('#listbox2');
    }

    function LoadGridData() {
        var _url = '/StaffAccess/StaffAccessGroupList';
        getpaging("StaffAccessGroupList", _url, 1, $('#txt_search_query').val(), $('#ddlCampus').val(), $('#ddlColleage').val(), $("#DepartmentId").val(), $('#ddlYear').val(), $('#ddlAdminssionType').val());
    }

    $(document).on('keypress', '#txt_search_query', function (e) {
        if (e.which == 13) {
            LoadGridData();
        }
    });
    $("#btnSearch").click(function () {
        LoadGridData();
    });
    function DownloadExcel() {
        window.location.href = '/Reader/Export?searchtxt=' + $('#txt_search_query').val();
        $(".loading").hide();
    }

    function SearchStaff() {
        LoadGridData();
    }
    function ClearFilter() {
        $('#DepartmentId').val('');
        LoadGridData();
    }
    function AssignAccessGroup() {
        var listBoxB = document.getElementById('listbox2').ej2_instances[0];
        let keyToFetch = 'Value';
        let values = [];
        if ($('#kt_datatable').find('input[type="checkbox"]:checked').length == 0) {
            Swal.fire({
                title: 'Error',
                text: 'Please select staff for assign access group',
                icon: "error",
                showCancelButton: false,
                confirmButtonText: 'OK'
            });
        }
        else if (listBoxB.jsonData.length == 0) {
            Swal.fire({
                title: 'Error',
                text: 'Please select available access group',
                icon: "error",
                showCancelButton: false,
                confirmButtonText: 'OK'
            });
        }
        else {
            listBoxB.jsonData.forEach(obj => {
                if (obj.hasOwnProperty(keyToFetch)) {
                    values.push(obj[keyToFetch]);
                }
            });
            combinationArray.forEach((obj, index) => {
                if (index <= values.length) {
                    obj.AccessGroup = values.join(',');
                } else {
                    obj.AccessGroup = '';
                }
            });
            let jsonData = JSON.stringify(combinationArray);
            $.ajax({
                url: '/StaffAccess/AssignAccessGroup',
                type: 'POST',
                contentType: 'application/json',
                data: jsonData,
                success: function (response) {
                    Swal.fire({
                        title: 'Success',
                        text: 'Access group assigned to staff',
                        icon: "success",
                        showCancelButton: false,
                        confirmButtonText: 'OK'
                    });
                    checkedIds = [];
                    Clear();
                    LoadGridData();
                    $("#btnBulkAg").attr("disabled", true);
                },
                error: function (xhr, status, error) {}
            });
        }
    }
    function RemoveAllAG() {
        if ($('#kt_datatable').find('input[type="checkbox"]:checked').length == 0) {
        Swal.fire({
            title: 'Error',
            text: 'Please select staff for remove assigned access group',
            icon: "error",
            showCancelButton: false,
            confirmButtonText: 'OK'
        });
        }
        if ($('#kt_datatable').find('input[type="checkbox"]:checked').length != 0) {
            $.ajax({
                url: '/StaffAccess/RemoveAccessGroup',
                type: 'POST',
                datatype: 'json',
                data: { StaffIds: checkedIds.join(",") },
                success: function (response) {
                    Swal.fire({
                        title: 'Success',
                        text: 'Access group removed from selected staff',
                        icon: "success",
                        showCancelButton: false,
                        confirmButtonText: 'OK'
                    });
                    checkedIds = [];
                    Clear();
                    LoadGridData();
                },
                error: function (xhr, status, error) {

                }
            });
        }
     }

    function SelectStaff() {
        let StaffName = "",StaffId = "";
        let isChecked = false;
        $('#kt_datatable').find('[class^="chk_"]').each(function () {
            if ($(this).prop('checked')) {
                isChecked = true;
                checkedIds.push($(this).data("staffid"));
                StaffId = $(this).data("staffid");
                StaffName = $(this).data("staffname");
            }
        });
        if (isChecked) {
            let existingIndex = combinationArray.findIndex(obj => obj.StaffId === StaffId);
            if (existingIndex === -1) {
                combinationArray.push({ StaffId: StaffId, StaffName: StaffName });
            } else {
                combinationArray[existingIndex].StaffName = StaffName;
            }
        }
        else {
            $("#btnBulkAg").attr("disabled", true);
            combinationArray = [];
        }
        //combinationArray = combinationArray.filter(obj => checkedIds.includes(obj.StudentId));
        if (combinationArray.length > 0) {
            $("#btnBulkAg").attr("disabled", false);
        }
    }

    function Clear() {
        combinationArray = [];
        var listBoxA = document.getElementById('listbox1').ej2_instances[0];
        var listBoxB = document.getElementById('listbox2').ej2_instances[0];
        listBoxB.dataSource = [];
        listBoxA.dataSource = @Html.Raw(Json.Encode(ViewBag.GroupA));
        listBoxA.refresh();
        listBoxB.refresh();
    }
</script>
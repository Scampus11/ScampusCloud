@model ScampusCloud.Models.StudentAccessGroupModel
@{
    ViewData["Title"] = "Manage Student Access";
}

<style>
    /*.container nav {
        background: rgb(54, 153, 255);
        border-radius: 7px;
    }*/

    #accordionBtn {
        /*background-color: unset !important;
        border-color: unset !important;*/
    }

    .navbar-top-head {
        width: 100%;
    }

    .department_lable {
        white-space: nowrap;
    }

    #accordionExample div {
        border-radius: 10px !important;
    }
</style>
<div class="subheader py-2 py-lg-4 subheader-solid" id="kt_subheader">
    <div class="container-fluid d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
        <!--begin::Info-->
        <div class="d-flex align-items-center flex-wrap mr-1">
            <!--begin::Page Heading-->
            <div class="d-flex align-items-baseline mr-5">
                <!--begin::Page Title-->
                <h5 class="text-dark font-weight-bold my-2 mr-5">
                    <span class="svg-icon menu-icon">
                        <span class="fab fa-font-awesome-flag text-primary"></span>
                    </span> @ViewData["Title"]
                </h5>
                <!--end::Page Title-->
            </div>
            <!--end::Page Heading-->
        </div>
        <!--end::Info-->

    </div>
</div>
<div class="container">
    <div class="card card-custom">
        <div class="card-header flex-wrap border-0 pt-6 pb-0 row">
            <div class="col-md-12">
                <div class="row align-items-center">
                    <div class="col-lg-9 col-xl-8">
                        @Html.Partial("_searchBarForDatatablePartial")
                    </div>
                    <div class="card-toolbar col-lg-3 col-xl-4 justify-content-end">
                        <!--begin::Button-->
                        <button class="btn btn-primary my-2 my-lg-0" id="accordionBtn">Bulk AG</button>
                        <!--end::Button-->
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="accordion pt-4" id="accordionExample" style="display: none;">
                <div class="card-body" id="headingOne">
                    <div class="tab-content">
                        <div class="row">
                            @*<div class="col-xl-2"></div>*@
                            <div class="col-xl-12">
                                <div class="my-10 pr-3 pl-3">
                                    <!--begin::Group-->
                                    <div class="form-group row">
                                        <label class="col-form-label col-1 text-left">Campus</label>
                                        <div class="col-3">
                                            @Html.DropDownListFor(model => model.CampusId, new SelectList(Model.lstCampus, "Value", "Text"), "Select Campus"
                                                , new { @class = "form-control", @id = "ddlCampus" })
                                        </div>
                                        <label class="col-form-label col-1 text-left">College</label>
                                        <div class="col-3" id="colleage">
                                            @Html.DropDownListFor(model => model.CollageId, new List<SelectListItem>(), "Select College"
                                                , new { @class = "form-control", @id = "ddlColleage" })
                                        </div>
                                        <label class="col-form-label col-1 text-left department_lable">Department</label>
                                        <div class="col-3">
                                            @Html.DropDownListFor(model => model.DepartmentId, new List<SelectListItem>(), "Select Department"
                                                , new { @class = "form-control", @id = "ddlDepartment" })
                                        </div>

                                    </div>
                                    <!--end::Group-->
                                    <!--begin::Group-->
                                    <div class="form-group row">
                                        <label class="col-form-label col-1 text-left">Year</label>
                                        <div class="col-3">
                                            @Html.DropDownListFor(model => model.YearId, new SelectList(Model.lstYear, "Value", "Text"), "Select Year"
        , new { @class = "form-control", @id = "ddlYear" })
                                        </div>

                                        <label class="col-form-label col-1 text-left">Admission Type</label>
                                        <div class="col-3">
                                            @Html.DropDownListFor(model => model.AdmissionTypeId, new SelectList(Model.lstAdmissionType, "Value", "Text"), "Select Admission Type"
                                   , new { @class = "form-control", @id = "ddlAdminssionType" })
                                        </div>

                                        <label class="col-form-label col-1 text-left">Gender</label>
                                        <div class="col-3">
                                            @Html.DropDownListFor(m => m.Gender, new List<SelectListItem>
                                            {
                                            new SelectListItem { Text = "Male", Value = "Male"},
                                            new SelectListItem { Text = "Female", Value = "Female"}
                                            }, "Select Gender", new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <!--end::Group-->
                                    <div class="form-group row">
                                    </div>
                                    <hr class="mt-2 mb-3" />
                                    <div class="card-toolbar">
                                        <button type="button" class="btn btn-primary font-weight-bolder mr-2" onclick="SearchStudent()" name="saveAndContinue" value="saveAndContinue">
                                            <i class="flaticon-search-1"></i>
                                            <span class="nav-text">Go Filter</span>
                                        </button>

                                        <button type="button" name="saveAndExit" value="saveAndExit " onclick="ClearFilter()" class="btn btn-success font-weight-bolder mr-2">
                                            <i class="flaticon2-trash"></i>
                                            <span class="nav-text">Clear Filter</span>
                                        </button>
                                    </div>
                                    <div class="form-group form-row-seperated">

                                    </div>
                                    <hr class="mt-2 mb-3" />
                                    <div class="form-group form-row-seperated">

                                    </div>

                                    <div class="form-group row">
                                        <label class="col-form-label col-3 text-left">Canteen Type</label>
                                        <div class="col-">
                                            @Html.DropDownListFor(model => model.AccessGroupTypeId, new SelectList(Model.lstAccessGroupDropdown, "Value", "Text"), "Select Canteen Type"
, new { @class = "form-control", @id = "ddlCanteenType" })
                                        </div>
                                    </div>
                                    <div class="form-group form-row-seperated">

                                    </div>
                                    <hr class="mt-2 mb-3" />
                                    <div class="form-group form-row-seperated">

                                    </div>
                                    <div class="form-group row">
                                        <div class="col-6">
                                            <div class="dual-list-groupa">
                                                <h5>Available Access Group</h5>
                                                <input id="listbox1">
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <div class="dual-list-groupb">
                                                <h5>Assigned Access Group</h5>
                                                <input id="listbox2">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row">

                                    </div>
                                    <div class="form-group row">
                                        <div class="card-toolbar">
                                            <button type="button" class="btn btn-primary font-weight-bolder mr-2" onclick="AssignAccessGroup()" name="Assign" value="Assign">
                                                <i class="flaticon-edit-1"></i>
                                                <span class="nav-text">Assign</span>
                                            </button>
                                            <button type="button" class="btn btn-danger  btn-hover-light-danger font-weight-bolder mr-2" onclick="RemoveAllAG()" name="removeAllAccessGorup" value="removeAllAccessGorup">
                                                <i class="flaticon-delete-1"></i>
                                                <span class="nav-text">RemoveAllAG</span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card-body pt-0">
            <div class="mb-7">
            </div>
            <div id="StudentAccessGroupList" class="custom-paging">
                @Html.Partial("_CustomPaging")
            </div>
            <div class="datatable datatable-default datatable-primary datatable-loaded">
                <div id="pagingFooter" class="datatable-pager">
                </div>
            </div>

        </div>

    </div>
</div>

<link href="~/Content/ej2/customized/material.css" rel="stylesheet" />
<link href="~/Content/ej2/material.css" rel="stylesheet" />
<link href="~/Content/ej2/compatibility/material.css" rel="stylesheet" />
<script src="~/Scripts/ej2/ej2.min.js"></script>
<script src="https://cdn.syncfusion.com/ej2/syncfusion-helper.js" type="text/javascript"></script>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script>
    let combinationArray = [];
    let checkedIds = [];
    $(document).ready(function () {
        $('#accordionBtn').click(function () {
            $('#accordionExample').slideToggle();
        });
        LoadGridData();
        LoadAccessGroup();
    });

    function LoadAccessGroup() {
         var listObj = new ej.dropdowns.ListBox({
         dataSource: @Html.Raw(Json.Encode(ViewBag.GroupA)),
         fields: { text: 'Text' },
         scope: '#listbox2',
         toolbarSettings: { items: ['moveTo','moveAllTo','moveFrom','moveAllFrom'] },
         height: '200px'
        });
        listObj.appendTo('#listbox1');
        listObj = new ej.dropdowns.ListBox({
                  dataSource: @Html.Raw(Json.Encode(ViewBag.GroupB)),
                 fields: { text: 'Text' },
                 scope: '#listbox1',
                 height: '200px'
        });
        listObj.appendTo('#listbox2');
    }

    function RemoveAllAG() {

        if ($('#kt_datatable').find('input[type="checkbox"]:checked').length == 0) {
            Swal.fire({
                title: 'Error',
                text: 'Please select student for remove assigned access group',
                icon: "error",
                showCancelButton: false,
                confirmButtonText: 'OK'
            });
        }
        $.ajax({
            url: '/StudentAccess/RemoveAccessGroup',
            type: 'POST',
            datatype:'json',
            data: { StudentIds: checkedIds.join(",") },
            success: function (response) {
                Swal.fire({
                    title: 'Success',
                    text: 'Access group removed from selected student',
                    icon: "success",
                    showCancelButton: false,
                    confirmButtonText: 'OK'
                });
                checkedIds = [];
                Clear();
                LoadGridData();
            },
            error: function (xhr, status, error) {

            }
        });
        @*var listBoxA = document.getElementById('listbox1').ej2_instances[0];
        var listBoxB = document.getElementById('listbox2').ej2_instances[0];
        listBoxB.dataSource = [];
        listBoxA.dataSource = @Html.Raw(Json.Encode(ViewBag.GroupA));
        listBoxB.dataSource = yourNewDataForGroupB;
        listBoxA.refresh();
        listBoxB.refresh();*@
    }

    $('#ddlCampus').change(function () {
        BindCollege($('#ddlCampus').val());
    });
    $('#ddlColleage').change(function () {
        BindDepartment($('#ddlColleage').val());
    });
    function LoadGridData() {
        var _url = '/StudentAccess/StudentAccessGroupList';
        getpaging("StudentAccessGroupList", _url, 1, $('#txt_search_query').val(), $('#ddlCampus').val(), $('#ddlColleage').val(), $('#ddlDepartment').val(), $('#ddlYear').val(), $('#ddlAdminssionType').val());
    }

    $(document).on('keypress', '#txt_search_query', function (e) {
        if (e.which == 13) {
            LoadGridData();
        }
    });

    $("#btnSearch").click(function () {
        LoadGridData();
    });
    function DownloadExcel() {
        window.location.href = '/Reader/Export?searchtxt=' + $('#txt_search_query').val();
        $(".loading").hide();
    }

    function SearchStudent() {
        LoadGridData();
    }
    function BindCollege(campusId) {
        $.ajax({
            type: "post",
            url: "/Student/GetColleageByCampus",
            data: { ScampusId: campusId },
            datatype: "json",
            traditional: true,
            success: function (data) {
                var colleage = "<select id='ddlColleage'>";
                colleage = colleage + '<option value="">Select College</option>';
                for (var i = 0; i < data.length; i++) {
                    colleage = colleage + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                }
                colleage = colleage + '</select>';
                $('#ddlColleage').html(colleage);
            }
        });
    }
    function BindDepartment(collegeId) {
        $.ajax({
            type: "post",
            url: "/Student/GetDepartmentByColleage",
            data: { ColleageId: collegeId },
            datatype: "json",
            traditional: true,
            success: function (data) {
                var department = "<select id='ddlDepartment'>";
                department = department + '<option value="">Select Department</option>';
                for (var i = 0; i < data.length; i++) {
                    department = department + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                }
                department = department + '</select>';
                $('#ddlDepartment').html(department);
            }
        });
    }

    function ClearFilter() {
        $('#ddlCampus').val('');
        $('#ddlColleage').val('');
        $('#ddlDepartment').val('');
        $('#ddlYear').val('');
        $('#ddlAdmissionType').val('');
        BindCollege($('#ddlCampus').val());
        BindDepartment($('#ddlColleage').val());
        LoadGridData();
    }
    function AssignAccessGroup() {
        var listBoxB = document.getElementById('listbox2').ej2_instances[0];
        let keyToFetch = 'Value';
        let values = [];
        let newKey = 'CanteenTypeId';
        let canteenTypeId = $("#ddlCanteenType").val();

        if ($('#kt_datatable').find('input[type="checkbox"]:checked').length == 0) {
            Swal.fire({
                title: 'Error',
                text: 'Please select student for assign access group',
                icon: "error",
                showCancelButton: false,
                confirmButtonText: 'OK'
            });
        }
        else if ($("#ddlCanteenType").val() == '' || $("#ddlCanteenType").val() == undefined || $("#ddlCanteenType").val() == null) {
            Swal.fire({
                title: 'Error',
                text: 'Please select canteen type',
                icon: "error",
                showCancelButton: false,
                confirmButtonText: 'OK'
            });
        }
        else if (listBoxB.jsonData.length == 0) {
            Swal.fire({
                title: 'Error',
                text: 'Please select available access group',
                icon: "error",
                showCancelButton: false,
                confirmButtonText: 'OK'
            });
        }
        else {
            listBoxB.jsonData.forEach(obj => {
                if (obj.hasOwnProperty(keyToFetch)) {
                    values.push(obj[keyToFetch]);
                }
            });
            combinationArray.forEach((obj, index) => {
                if (index <= values.length) {
                    obj.AccessGroup = values.join(',');
                    obj[newKey] = canteenTypeId;
                } else {
                    obj.AccessGroup = '';
                }
            });
            let jsonData = JSON.stringify(combinationArray);
            $.ajax({
                url: '/StudentAccess/AssignAccessGroup',
                type: 'POST',
                contentType: 'application/json',
                data: jsonData,
                success: function (response) {
                    Swal.fire({
                        title: 'Success',
                        text: 'Access group assigned to student',
                        icon: "success",
                        showCancelButton: false,
                        confirmButtonText: 'OK'
                    });
                    checkedIds = [];
                    Clear();
                    LoadGridData();
                },
                error: function (xhr, status, error) {

                }
            });
        }
    }
    function SelectStudent(StudentId, StudentName, CompanyId) {
        let isChecked = false;
        
        $('#kt_datatable').find('[class^="chk_"]').each(function () {
            if ($(this).prop('checked')) {
                isChecked = true;
                checkedIds.push($(this).data('studentid'));
            }
        });
        if (isChecked) {
            let existingIndex = combinationArray.findIndex(obj => obj.StudentId === StudentId);
            if (existingIndex === -1) {
                combinationArray.push({ StudentId: StudentId, StudentName: StudentName });
            } else {
                combinationArray[existingIndex].StudentName = StudentName;
            }
        }
        combinationArray = combinationArray.filter(obj => checkedIds.includes(obj.StudentId));
    }

    function Clear() {
        combinationArray = [];
        $("#ddlCanteenType").val("");
        var listBoxA = document.getElementById('listbox1').ej2_instances[0];
        var listBoxB = document.getElementById('listbox2').ej2_instances[0];
        listBoxB.dataSource = [];
        listBoxA.dataSource = @Html.Raw(Json.Encode(ViewBag.GroupA));
        listBoxA.refresh();
        listBoxB.refresh();
    }
</script>
